#pragma strict
#pragma downcast

///////////////////////////////////////////////////////////////////////////////
//
// Variable declarations
//
///////////////////////////////////////////////////////////////////////////////

// Prefab slots
var pillar : Transform;
var wall : Transform;
var flag : Transform;
var flagS : Transform;

// Constances
private var tileSize : float = 0.42;

// Current board settings
private var boardWidth : int = 0;
private var boardHeight : int = 0;
private var board = new Array();
			 
// Current item settings
private var flagXY : int[] = [-1, -1, -1, -1, -1];
private var playerXY : int;
private var startXY : int;
private var enemyXY = new Array();

///////////////////////////////////////////////////////////////////////////////
//
// Public functions
//
///////////////////////////////////////////////////////////////////////////////
			  
function SetupBoard(stage : int) {
	CopySettings(stage);

	var curTile : int;
	for(var i = 0; i < boardHeight; i++) {
		for(var j = 0; j < boardWidth; j++) {
			curTile = i*boardWidth+j;
			if(board[curTile] == 1) {
				if(i%2==0 && j%2==0) {
					Instantiate(pillar, Vector3(j/2*tileSize, 0, i/2*tileSize*(-1)), pillar.transform.rotation);
				} else if(i%2==0) {
					Instantiate(wall, Vector3((j-1)/2*tileSize+tileSize/2, 0, i/2*tileSize*(-1)), wall.transform.rotation);
				} else if(j%2==0) {
					Instantiate(wall, Vector3(j/2*tileSize, 0, (i-1)/2*tileSize*(-1)-tileSize/2), Quaternion.Euler(-90, 90, 0));
				}
			}
		}
	}
}

function GetAvailableDirection(target : int) {
	if(target <= boardWidth || target >= board.length-boardWidth) {
		return 0;
	}

	var output : int = 0;
	if(board[target-1] == 0) {
		output = output | 1;
	}
	if(board[target-boardWidth] == 0) {
		output = output | 2;
	}
	if(board[target+1] == 0) {
		output = output | 4;
	}
	if(board[target+boardWidth] == 0) {
		output = output | 8;
	}
	
	return output;
}

function GetBoardXY(x : float, z : float) {
	var boardX = (Mathf.FloorToInt(x / tileSize))*2 + 1;
	var boardY = (Mathf.FloorToInt((-1) * z / tileSize))*2 + 1;
	return boardX + boardY * boardWidth;
}

function GetBoardDimension() {
	return [boardWidth, boardHeight];
}

function GetCenter(xy : int) {
	var x = xy%boardWidth;
	var boardX = (x-1)/2*tileSize + tileSize/2;
	var y = Mathf.FloorToInt(xy/boardWidth);
	var boardY = (y-1)/2*tileSize*(-1) - tileSize/2;
	return Vector3(boardX, 0, boardY);
}

function PlaceFlags() {
	var range : int = Mathf.FloorToInt(boardWidth * boardHeight / 5);
	var start : int = 0;
	var i : int;
	var tmp : int;

	for(i = 0; i < 5; i++) {
		do {
			tmp = Mathf.FloorToInt(Random.Range(start, start+range));
		} while(board[tmp] != 0);
		flagXY[i] = tmp;
		start += range;
	}
	
	tmp = Mathf.FloorToInt(Random.Range(0, 5));
	for(i = 0; i < 5; i++) {
		if(i == tmp) {
			Instantiate(flagS, GetCenter(flagXY[i])+Vector3(0, 0.25, 0), flagS.transform.rotation);
		} else {
			Instantiate(flag, GetCenter(flagXY[i])+Vector3(0, 0.25, 0), flag.transform.rotation);
		}
	}
}

function GetInitialPlayerXY() {
	return startXY;
}

function GetInitialEnemysXY() {
	var output : int[] = enemyXY.ToBuiltin(int);
	return output;
}

function UpdatePlayerXY(input : int) {
	playerXY = input;
}

function GetPlayerXY() {
	return playerXY;
}

function GetFlagXY() {
	return flagXY;
}

///////////////////////////////////////////////////////////////////////////////
//
// Private functions
//
///////////////////////////////////////////////////////////////////////////////

function CopySettings(stage : int) {
	switch(stage) {
	case 0 :
		boardWidth = boardWidth1;
		boardHeight = boardHeight1;
		board = board1;
		startXY = startXY1;
		enemyXY = enemyXY1;
		break;
	case 1 :
		boardWidth = boardWidth2;
		boardHeight = boardHeight2;
		board = board2;
		startXY = startXY2;
		enemyXY = enemyXY2;
		break;
	case 2 :
		boardWidth = boardWidth3;
		boardHeight = boardHeight3;
		board = board3;
		startXY = startXY3;
		enemyXY = enemyXY3;
		break;
	}
	playerXY = startXY;
}

///////////////////////////////////////////////////////////////////////////////
//
// Stage1 settings
//
///////////////////////////////////////////////////////////////////////////////
			  
// Current board settings
private var boardWidth1 : int = 43;
private var boardHeight1 : int = 27;
private var board1 = [
	2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,
	2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,
	1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,0,1,1,1,
	1,0,0,0,0,0,1,2,2,2,1,0,0,0,1,2,1,0,0,0,0,0,0,0,1,2,2,2,1,0,1,2,1,0,0,0,0,0,1,0,0,0,1,
	1,0,1,1,1,0,1,1,1,1,1,0,1,0,1,2,1,1,1,0,1,1,1,0,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,0,1,0,1,
	1,0,0,0,1,0,0,0,0,0,0,0,1,0,1,2,2,2,1,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,1,2,2,2,1,0,1,0,1,
	1,1,1,0,1,0,1,1,1,1,1,1,1,0,1,2,2,2,1,0,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,0,1,
	2,2,1,0,1,0,1,2,2,2,2,2,1,0,1,2,2,2,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,
	1,1,1,0,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,0,1,1,1,1,1,0,1,0,1,0,1,1,1,0,1,1,1,0,1,0,1,
	1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,2,2,2,1,0,0,0,1,0,1,2,1,0,1,2,1,0,1,0,1,
	1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,0,1,0,1,0,1,2,1,0,1,1,1,0,1,0,1,
	1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1,0,1,2,1,0,0,0,0,0,0,0,1,
	1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,0,1,0,1,0,1,1,1,0,1,1,1,0,1,0,1,
	1,0,1,2,2,2,1,0,1,2,2,2,2,2,1,0,1,2,2,2,1,0,1,2,2,2,1,0,1,0,1,0,0,0,0,0,1,2,1,0,1,0,1,
	1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,0,1,0,1,0,1,1,1,0,1,2,1,0,1,0,1,
	1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,1,0,1,2,1,0,0,0,1,
	1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,2,1,0,1,2,1,0,1,1,1,
	2,2,1,0,1,2,1,0,1,2,2,2,2,2,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,2,1,0,1,2,1,0,1,2,2,
	1,1,1,0,1,1,1,0,1,1,1,1,1,2,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,0,1,1,1,0,1,2,2,
	1,0,0,0,0,0,0,0,0,0,0,0,1,2,1,0,1,0,1,0,1,0,1,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,2,2,
	1,0,1,0,1,0,1,1,1,1,1,0,1,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,
	1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,2,1,0,1,2,2,2,2,2,1,0,0,0,1,
	1,0,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,0,1,0,1,0,1,0,1,0,1,2,1,0,1,1,1,1,1,2,1,1,1,0,1,
	1,0,1,0,1,2,2,2,2,2,1,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,1,2,1,0,0,0,0,0,1,2,2,2,1,0,1,
	1,0,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,0,1,1,1,0,1,1,1,1,1,0,1,
	1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,1,0,0,0,0,0,0,0,1,
	1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1];
			 
// Current item settings
private var startXY1 : int = 752;
private var enemyXY1 = [134, 166, 226, 152, 248];

///////////////////////////////////////////////////////////////////////////////
//
// Stage2 settings
//
///////////////////////////////////////////////////////////////////////////////
			  
// Current board settings
private var boardWidth2 : int = 41;
private var boardHeight2 : int = 29;
private var board2 = [
	1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
	1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,2,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
	1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,2,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,
	1,0,1,2,2,2,1,0,1,2,2,2,2,2,1,0,1,2,1,0,0,0,0,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
	1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,0,1,
	1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,1,0,0,0,0,0,1,2,2,2,1,0,1,2,2,2,1,0,1,
	1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,0,1,2,2,2,1,0,1,2,2,2,1,0,1,
	1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,2,2,1,0,1,2,2,2,1,0,1,
	1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,0,1,1,1,1,1,0,1,
	2,2,1,0,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,2,2,2,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
	1,1,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1,0,1,2,2,2,2,2,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,
	1,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,1,0,1,2,2,2,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
	1,0,1,1,1,0,1,0,1,1,1,1,1,0,1,0,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,
	1,0,0,0,0,0,1,0,1,2,2,2,1,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1,2,2,
	1,0,1,1,1,0,1,0,1,1,1,1,1,0,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1,2,2,
	1,0,1,2,1,0,1,0,0,0,0,0,0,0,1,0,1,0,1,2,2,2,2,2,1,0,1,0,0,0,0,0,0,0,0,0,1,0,1,2,2,
	1,0,1,2,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,0,1,1,1,0,1,0,1,1,1,1,1,0,1,2,2,
	1,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,2,1,0,1,0,1,2,2,2,1,0,1,2,2,
	1,0,1,2,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,2,1,0,1,0,1,2,2,2,1,0,1,2,2,
	1,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,2,2,2,1,0,1,2,1,0,1,0,1,2,2,2,1,0,1,2,2,
	1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,0,1,0,1,1,1,1,1,0,1,2,2,
	1,0,0,0,0,0,0,0,0,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,
	1,0,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,2,2,
	1,0,1,2,2,2,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,2,2,2,2,2,1,0,1,2,2,2,2,
	1,0,1,1,1,1,1,1,1,0,1,1,1,0,1,0,1,1,1,1,1,0,1,1,1,0,1,0,1,1,1,1,1,1,1,0,1,2,2,2,2,
	1,0,0,0,0,0,0,0,0,0,1,2,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,2,2,2,2,
	1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,2,2,2,2,
	2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,
	2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2];
			 
// Current item settings
private var startXY2 : int = 882;
private var enemyXY2 = [454, 312, 310, 382, 560];

///////////////////////////////////////////////////////////////////////////////
//
// Stage3 settings
//
///////////////////////////////////////////////////////////////////////////////
			  
// Current board settings
private var boardWidth3 : int = 39;
private var boardHeight3 : int = 27;
private var board3 = [
	1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
	1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
	1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,2,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,
	1,0,1,2,2,2,2,2,1,0,1,2,2,2,2,2,1,0,1,2,1,0,1,2,2,2,2,2,1,0,1,2,2,2,2,2,1,0,1,
	1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,
	1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
	1,0,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,0,1,
	1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,2,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,
	1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,
	2,2,2,2,2,2,2,2,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,2,2,2,2,2,2,2,2,
	2,2,2,2,2,2,2,2,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,2,2,2,2,2,2,2,2,
	2,2,2,2,2,2,2,2,1,0,1,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,1,0,1,2,2,2,2,2,2,2,2,
	2,2,2,2,2,2,2,2,1,0,1,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,1,0,1,2,2,2,2,2,2,2,2,
	2,2,2,2,2,2,2,2,1,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,1,2,2,2,2,2,2,2,2,
	2,2,2,2,2,2,2,2,1,0,1,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,1,0,1,2,2,2,2,2,2,2,2,
	2,2,2,2,2,2,2,2,1,0,1,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,1,0,1,2,2,2,2,2,2,2,2,
	2,2,2,2,2,2,2,2,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,2,2,2,2,2,2,2,2,
	2,2,2,2,2,2,2,2,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,2,2,2,2,2,2,2,2,
	1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,
	1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
	1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,
	1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,
	1,1,1,1,1,1,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1,1,1,1,1,
	1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,2,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,
	1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,
	1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
	1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];
			 
// Current item settings
private var startXY3 : int = 838;
private var enemyXY3 = [284, 300, 370, 204, 224];